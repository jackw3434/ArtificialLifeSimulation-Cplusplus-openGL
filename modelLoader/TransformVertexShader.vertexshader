#version 330 core

layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;
out vec2 UV;
uniform mat4 MVP;

void main(){
	gl_Position = MVP * vec4(vertexPosition_modelspace, 1);
	UV = vertexUV;
}






//#version 330 core

//layout (location = 0) in vec3 aPos;
//layout (location = 1) in vec3 aColor;
//layout (location = 2) in vec2 aTexCoord;


//out vec3 ourColor;
//out vec2 TexCoord;

//void main(){

  //  gl_Position = vec4(aPos, 1.0);
  //  ourColor = aColor;
  //  TexCoord = aTexCoord;		
//}




//stuff from open-gl-tutorial
// Input vertex data, different for all executions of this shader
//layout(location = 0) in vec3 vertexPosition_modelspace;
//layout(location = 1) in vec2 vertexUV;
//out vec2 UV;
//uniform mat4 MVP;

//stuff from open-gl-tutorial
	// Output position of the vertex, in clip space : MCP * position
	//gl_Position = MVP * vec4(vertexPosition_modelspace, 1);
	//UV = vertexUV;